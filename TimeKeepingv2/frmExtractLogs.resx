<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TAOhLAEA1ZkGQkkCADANhIIEAGAaCAUJAOAE00AoRQAALzANhDIEAHCqvf9tGgglCADgdKaBUIIAAP6/
        2259/xc6DwaQhwAA+o7s+QnTQMhLAAB91974mf986q6XPNp5OIDlEwDAmf3ezlsebg+FaSDkIwCAs7tn
        9y+YBkI+AgA4F9NASEgAAOdmGgjpCABga0wDIRUBAGzdoT/7yc89fdf3PA0s25Ofeekfb/7en/bHSrv0
        AgAAcvE/AABQkAAAgIIEAAAUJAAAoCABAAAFCQAAKEgAAEBBAgAAChIAAFCQAACAggQAABQkAACgIAEA
        AAUJAAAoSAAAQEECAAAKEgAAUJAAAICCBAAAFCQAAKAgAQAABQkAAChIAABAQQIAAAoSAABQkAAAgIIE
        AAAUJAAAoCABAAAFCQAAKEgAAEBBAgAAChIAAFCQAACAggQAABQkAACgIAEAAAUJAAAoSAAAQEECAAAK
        EgAAUJAAAICCBAAAFCQAAKAgAQAABQkAAChIAABAQQIAAAoSAABQkAAAgIIEAAAUJAAAoCABAAAFCQAA
        KEgAAEBBAgAAChIAAFCQAACAggQAABQkAACgIAEAAAUJAAAoSAAAQEECAAAKEgAAUJAAAICCBAAAFCQA
        AKAgAQAABQkAAChIAABAQQIAAAoSAABQkAAAgIIEAAAUJAAAoCABAAAFCQAAKEgAAEBBAgAAChIAAFCQ
        AACAggQAABQkAACgIAEAAAUJAAAoSAAAQEECAAAKEgAAUJAAAICCBAAAFCQAAKAgAQAABQkAAChIAABA
        QQIAAAoSAABQkAAAgIIEAAAUJAAAoCABAAAFCQAAKEgAAEBBAgAAChIAAFCQAACAggQAABQkAACgIAEA
        AAUJAAAoSAAAQEECAAAKEgAAUJAAAICCBAAAFCQAAKAgAQAABQkAAChIAABAQQIAAAoSAJDBTbfs37hn
        3yFgoN/+/fu693OmBABk8Ed/+oWNrz/9D8BAN3/swe79nCkBABkIABhPAADhBACMJwCAcAIAxhMAQDgB
        AOMJACCcAIDxBAAQTgDAeAIACCcAYDwBAIQTADCeAADCCQAYTwAA4QQAjCcAgHACAMYTAEA4AQDjCQAg
        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
</value>
  </data>
</root>